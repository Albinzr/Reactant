<?xml version="1.0"?>
<xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://www.brightify.org"
    xmlns="http://www.brightify.org"
    elementFormDefault="qualified"
    vc:minVersion="1.1"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
    xmlns:layout="http://www.brightify.org/layout">

    <xs:import namespace="http://www.brightify.org/layout" schemaLocation="Layout.xsd" />

    <xs:element name="UI">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:group ref="ViewGroup"/>
            </xs:choice>
            <xs:attribute name="type" type="xs:string" use="required"/>
            <xs:attribute name="rootView" type="xs:boolean" default="false"/>
            <xs:attribute name="extend" type="rectEdge" />
        </xs:complexType>
    </xs:element>

    <xs:group name="ViewGroup">
        <xs:choice>
            <xs:element name="ImageView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attribute name="image" type="xs:string"/>
                            <xs:attribute name="contentMode" type="contentMode"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Container" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:choice maxOccurs="unbounded" minOccurs="0">
                                <xs:group ref="ViewGroup"/>
                            </xs:choice>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="StackView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:choice maxOccurs="unbounded" minOccurs="0">
                                <xs:group ref="ViewGroup"/>
                            </xs:choice>
                            <xs:attribute name="axis" type="layoutAxis" />
                            <xs:attribute name="distribution" type="layoutDistribution" />
                            <xs:attribute name="alignment" type="layoutAlignment" />
                            <xs:attribute name="spacing" type="xs:decimal" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="ScrollView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:choice maxOccurs="1" minOccurs="0">
                                <xs:group ref="ViewGroup" />
                            </xs:choice>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Label" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="labelAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="TextField" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="textAttributes" />
                            <xs:attribute name="placeholder" type="xs:string" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Button" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="labelAttributes" />
                            <xs:attribute name="title" type="xs:string" />
                            <xs:attribute name="titleColor" type="color" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Component" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="type" type="xs:string" />
                    <xs:attributeGroup ref="layout:layoutAttributes" />
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>

    <xs:attributeGroup name="textAttributes">
        <xs:attribute name="text" type="xs:string"/>
        <xs:attribute name="textColor" type="color"/>
        <xs:attribute name="font" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="labelAttributes">
        <xs:attributeGroup ref="textAttributes" />
        <xs:attribute name="numberOfLines" type="xs:nonNegativeInteger" />
        <xs:attribute name="textAlignment" type="textAlignment" />
    </xs:attributeGroup>

    <xs:complexType name="assignable">
        <xs:attribute name="field" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="viewType">
        <xs:complexContent>
            <xs:extension base="assignable">
                <xs:annotation>
                    <xs:documentation>The color attribute group indicates the color of an element.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="backgroundColor" type="color"/>
                <xs:attribute name="clipsToBounds" type="xs:boolean"/>
                <xs:attribute name="cornerRadius" type="xs:decimal"/>
                <xs:attributeGroup ref="layout:layoutAttributes" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="contentMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="left"/>
            <xs:enumeration value="scaleAspectFill"/>
            <xs:enumeration value="scaleAspectFit"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="textAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="left" />
            <xs:enumeration value="right" />
            <xs:enumeration value="center" />
            <xs:enumeration value="justified" />
            <xs:enumeration value="natural" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="layoutAxis">
        <xs:restriction base="xs:string">
            <xs:enumeration value="vertical" />
            <xs:enumeration value="horizontal" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="layoutDistribution">
        <xs:restriction base="xs:string">
            <xs:enumeration value="fill" />
            <xs:enumeration value="fillEqually" />
            <xs:enumeration value="fillProportionally" />
            <xs:enumeration value="equalSpacing" />
            <xs:enumeration value="equalCentering" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="layoutAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="fill" />
            <xs:enumeration value="firstBaseline" />
            <xs:enumeration value="lastBaseline" />
            <xs:enumeration value="leading" />
            <xs:enumeration value="trailing" />
            <xs:enumeration value="center" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="color">
        <!-- should contain hexColor, but autocomplete-xml crashes -->
        <xs:union memberTypes="namedColor hexColor"/>
    </xs:simpleType>

    <xs:simpleType name="hexColor">
        <xs:annotation>
            <xs:documentation>The color entity indicates the color of an element. Color may be represented as hexadecimal RGB triples, as in HTML, or as hexadecimal ARGB tuples, with the A indicating alpha of transparency. An alpha value of 00 is totally transparent; FF is totally opaque. If RGB is used, the A value is assumed to be FF. For instance, the RGB value "#800080" represents purple. An ARGB value of "#40800080" would be a transparent purple. As in SVG 1.1, colors are defined in terms of the sRGB color space (IEC 61966).</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="#[\dA-Fa-f]{6}([\dA-Fa-f][\dA-Fa-f])?"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="rectEdge">
        <xs:list>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="all" />
                    <xs:enumeration value="top" />
                    <xs:enumeration value="bottom" />
                    <xs:enumeration value="left" />
                    <xs:enumeration value="right" />
                </xs:restriction>
            </xs:simpleType>
        </xs:list>
    </xs:simpleType>

    <xs:simpleType name="namedColor">
        <xs:restriction base="xs:string">
            <xs:enumeration value="black"/>
            <xs:enumeration value="darkGray"/>
            <xs:enumeration value="lightGray"/>
            <xs:enumeration value="white"/>
            <xs:enumeration value="gray"/>
            <xs:enumeration value="red"/>
            <xs:enumeration value="green"/>
            <xs:enumeration value="blue"/>
            <xs:enumeration value="cyan"/>
            <xs:enumeration value="yellow"/>
            <xs:enumeration value="magenta"/>
            <xs:enumeration value="orange"/>
            <xs:enumeration value="purple"/>
            <xs:enumeration value="brown"/>
            <xs:enumeration value="clear"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
